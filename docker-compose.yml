version: '2'

volumes:
  node_modules:
  mongo_data: {}
  redis_data: {}

services:
  node:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    volumes:
      - .:/usr/app/
      - node_modules:/usr/app/node_modules
    depends_on:
      - mongo
      - redis
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mongodb+srv://hoang:vanhoang@mongo@cluster0-aujc1.mongodb.net/test?retryWrites=true&w=majority
      - HOST=blood-center.quanghoang.me
      - REDIS_URL=redis://redis:6379/1
      - APP_HOST=0.0.0.0
      - DOMAIN_NAME=blood-center.quanghoang.me
      - PORT=8080
    ports:
      - '8080:8080'
  mongo:
    restart: always
    image: mongo:3.4.10
    command: mongod --storageEngine wiredTiger
    volumes:
      - mongo_data:/data/db
  redis:
    image: redis:3.2-alpine
    volumes:
      - redis_data:/data
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    links:
      - node
    volumes:
      - ./compose/nginx:/etc/nginx/conf.d
      - ./compose/certbot/conf:/etc/letsencrypt
      - ./compose/certbot/www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./compose/certbot/conf:/etc/letsencrypt
      - ./compose/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
